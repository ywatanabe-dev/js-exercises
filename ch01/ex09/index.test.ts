import { wordHistogram } from "./wordHistogram.ts";

describe("wordHistogram", () => {
  it("add `a`=>1, `b`=>1, `c`=>1, `d`=>1, `e`=>1", () => {
    const histogram = new wordHistogram();
    const test = "a b c d e";
    histogram.add(test);
    expect(histogram.toString()).toBe(
      "         a: ######################################################################################################################################################################################################## 20.00%\n" +
        "         b: ######################################################################################################################################################################################################## 20.00%\n" +
        "         c: ######################################################################################################################################################################################################## 20.00%\n" +
        "         d: ######################################################################################################################################################################################################## 20.00%\n" +
        "         e: ######################################################################################################################################################################################################## 20.00%"
    );
  });

  it("add `a`=>4, `b`=>3, `c`=>3, `d`=>2, `e`=>2, `f`=>2, `g`=>1", () => {
    const histogram = new wordHistogram();
    const test = "a a a a b b b c c c d d e e f f g";
    histogram.add(test);
    expect(histogram.toString()).toBe(
      "         a: ########################################################################################################################################################################################################################################### 23.53%\n" +
        "         b: ################################################################################################################################################################################ 17.65%\n" +
        "         c: ################################################################################################################################################################################ 17.65%\n" +
        "         d: ###################################################################################################################### 11.76%\n" +
        "         e: ###################################################################################################################### 11.76%\n" +
        "         f: ###################################################################################################################### 11.76%\n" +
        "         g: ########################################################### 5.88%"
    );
  });

  it("add `aa`=>1, `bb`=>1, `cc`=>1, `dd`=>1, `ee`=>1", () => {
    const histogram = new wordHistogram();
    const test = "aa bb cc\n dd ee";
    histogram.add(test);
    expect(histogram.toString()).toBe(
      "        aa: ######################################################################################################################################################################################################## 20.00%\n" +
        "        bb: ######################################################################################################################################################################################################## 20.00%\n" +
        "        cc: ######################################################################################################################################################################################################## 20.00%\n" +
        "        dd: ######################################################################################################################################################################################################## 20.00%\n" +
        "        ee: ######################################################################################################################################################################################################## 20.00%"
    );
  });

  it("add `1`=>1, `2`=>1, `3`=>3, `4`=>4, `5`=>5", () => {
    const histogram = new wordHistogram();
    const test = "1 2 3 4 5";
    histogram.add(test);
    expect(histogram.toString()).toBe(
      "         1: ######################################################################################################################################################################################################## 20.00%\n" +
        "         2: ######################################################################################################################################################################################################## 20.00%\n" +
        "         3: ######################################################################################################################################################################################################## 20.00%\n" +
        "         4: ######################################################################################################################################################################################################## 20.00%\n" +
        "         5: ######################################################################################################################################################################################################## 20.00%"
    );
  });
});
